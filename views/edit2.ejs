<!-- Include stylesheet -->
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet" />

<!-- Create the editor container -->
<div id="editor"></div>
<button onclick="insertImage()" id="image">Add Image</button>

<!-- Include the Quill library -->
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

<!-- Initialize Quill editor -->
<script>
  const pantheon = "http://masonmafanclub.cse356.compas.cs.stonybrook.edu";
  const uid = Math.floor(Math.random() * 100000);
  const docid = "<%= docid %>";

  var quill = new Quill("#editor", {
    theme: "snow",
  });

  console.log("uid", uid);
  console.log("docid", docid);
// IMPORTANT variables
  var version = 0
  var lastSubmitted = {}



  var Delta = Quill.import("delta");
  var firstMessage = true;
  const eventSource = new EventSource(
    `${pantheon}/doc/connect/${docid}/${uid}`
  );
  eventSource.onopen = (e) => {
    console.log("opened connection");
    console.log(e);
  };
  eventSource.onmessage = (e) => {
    var data = JSON.parse(e.data)
    if(data.hasOwnProperty('content') && data.hasOwnProperty('version')){
      // { content, version }, { presence }, { ack },
      version = data.version
      delta = new Delta(data.content)
      quill.setContents(delta, (source = "api"));
    }
    else if (data.hasOwnProperty('presence')){

    }
    else if (data.hasOwnProperty('ack')){
      var acked = data.ack;
      console.log('acked: ', acked, 'lastSubmitted: ', lastSubmitted)
      // we can send again
    }
    else{
      // for (i in data) {
      //   ops = data[i];

      //   delta = new Delta(ops);
      //   console.log(delta);
      //   quill.updateContents(delta, (source = "api"));
      // }
      quill.updateContents(new Delta(data), (source = "api"));
      version += 1;
    }
  };

  function insertImage() {
    delta = quill.insertEmbed(
      0,
      "image",
      "http://194.113.75.19:3000/media/access/6256ffcf67b4678db040b43d"
    );
    sendDelta(delta);
  }

  function sendDelta(delta) {
    lastSubmitted = delta.ops // replace with queue after
    const res = fetch(`${pantheon}/doc/op/${docid}/${uid}`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({version: version, op: delta.ops}),
    });
  }
  quill.on("text-change", function (delta, oldDelta, source) {
    if (source == "api") {
      console.log("An API call triggered this change.");
    } else if (source == "user") {
      console.log("A user action triggered this change.");
      sendDelta(delta);
    }
  });
</script>
